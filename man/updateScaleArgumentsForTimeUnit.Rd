% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{updateScaleArgumentsForTimeUnit}
\alias{updateScaleArgumentsForTimeUnit}
\title{adjust arguments for scale if dimension of scale is time}
\usage{
updateScaleArgumentsForTimeUnit(scale.args, dimension, unit)
}
\arguments{
\item{scale.args}{list of arguments for scale to be updated, passed to scale_x_continuous or scale_x_log10}

\item{dimension}{dimension of axis, if not 'time' list will not be updated}

\item{unit}{A named list of information about the \code{data} such as the \code{dimension} and \code{unit} of its variables.}
}
\value{
update list of arguments for scale
}
\description{
adds break function with fixed width for breaks depending on unit:
}
\details{
\itemize{
\item s: width = 15,
\item min: width = 15,
\item h: width = 6,
\item day(s): width = 7
\item week(s): width = 4
\item month(s): width = 6
}

The function uses the following logic to determine the breaks:
\itemize{
\item If the range of time values is relatively small (i.e., less than twice the width of the breaks),
it will use a default set of extended breaks.
\item If the range of time values is larger, the function will check if it is appropriate to use
wider breaks. Specifically, it will continue to double the width until it finds a width
that is suitable, ensuring that 10 times the width is still less than the total range of time values.
This means that the breaks will be spaced far enough apart to be meaningful without overcrowding
the axis, providing clarity in the visualization.
}
}
\examples{
xscale.args <- list(limits = c(0, 24))
xscale.args <-
  updateScaleArgumentsForTimeUnit(
    scale.args = xscale.args,
    dimension = "time",
    unit = "h"
  )
addXscale(plotObject = ggplot(), xscale = "linear", xscale.args = xscale.args)
}
